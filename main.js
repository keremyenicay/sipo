(function () {
    'use strict';

    const params = new URLSearchParams(window.location.search);
    const isSipo = params.get("sipo") === "true";
    const isNewTab = params.get("newTab") === "true"; // Yeni sekme kontrol√º
    const url = window.location.href;

    // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    // 0. AMAZON THANK YOU SAYFASI: Otomatik y√∂nlendirme
    // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    if (url.includes("amazon.com/gp/buy/thankyou/handlers/display.html")) {
        console.log("‚úÖ Amazon thank you sayfasƒ± algƒ±landƒ±. Sipari≈ü onaylandƒ±.");
        setTimeout(() => {
            window.location.replace("https://www.amazon.com/gp/css/order-history?ref_=nav_orders_first&sipo=true&newTab=true");
        }, 500);
        return;
    }

    // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    // 1. AMAZON ORDER HISTORY SAYFASI: Sipari≈ü Bilgilerinin G√∂sterilmesi (Manuel Mod)
    // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    if (url.includes("amazon.com/gp/css/order-history")) {
        console.log("‚úÖ Amazon order history sayfasƒ± algƒ±landƒ±. Manuel mod aktif.");

        const waitForOrderCard = setInterval(() => {
            // Sipari≈ü kartƒ±nƒ± i√ßeren uygun bir selector kullanƒ±n
            const orderCard = document.querySelector('.order-card');
            if (orderCard) {
                clearInterval(waitForOrderCard);
                const textContent = orderCard.innerText;
                console.log("Sipari≈ü kartƒ± metni:", textContent);

                // RegEx ifadeleriyle sipari≈ü numarasƒ± ve toplam fiyat √ßekiliyor.
                let orderId = "";
                let total = "";
                const orderIdMatch = textContent.match(/ORDER\s*#\s*([\d-]+)/i);
                const totalMatch = textContent.match(/\$(\d+\.\d{2})/);
                if (orderIdMatch) {
                    orderId = orderIdMatch[1];
                }
                if (totalMatch) {
                    total = totalMatch[1];
                }
                if (!orderId || !total) {
                    console.error("‚ùå Sipari≈ü bilgileri bulunamadƒ±. L√ºtfen DOM selector'larƒ±nƒ± kontrol edin.");
                    return;
                }
                console.log("Bulunan Amazon Order ID:", orderId, "Toplam:", total);

                // Manuel mod: Sipari≈ü bilgilerini g√∂steren bir bilgi kutusu ekle
                const infoBox = document.createElement('div');
                infoBox.style = "position: fixed; top: 10px; right: 10px; background-color: #f0f8ff; border: 2px solid #ff9900; padding: 15px; border-radius: 5px; z-index: 9999; font-size: 14px; box-shadow: 0 2px 10px rgba(0,0,0,0.2); max-width: 350px;";
                infoBox.innerHTML = `
                    <h3 style="margin-top: 0; color: #232f3e;">Sipari≈ü Bilgileri (Manuel Mod)</h3>
                    <p><strong>Sipari≈ü ID:</strong> <span style="color: #B12704; font-weight: bold;">${orderId}</span></p>
                    <p><strong>Toplam Tutar:</strong> <span style="color: #B12704; font-weight: bold;">$${total}</span></p>
                    <p style="margin-bottom: 0; font-style: italic; font-size: 12px;">Bu bilgileri Sellerflash'ta manuel olarak girebilirsiniz.</p>
                `;
                document.body.appendChild(infoBox);
                console.log("‚úÖ Bilgi kutusu eklendi. Sayfa otomatik kapanmayacak.");

                // NOT: Artƒ±k otomatik kapanma yok, kullanƒ±cƒ± manuel olarak bilgileri kopyalayabilir
            }
        }, 300);
        return;
    }

    // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    // 2. AMAZON √úR√úN / CART VE Dƒ∞ƒûER AMAZON SAYFALARI
    // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

    // A. √úr√ºn Sayfasƒ± (/dp/) - KUPON VE ƒ∞NDƒ∞Rƒ∞M ƒ∞≈ûLEMLERƒ∞ EKLENDƒ∞
    if (isSipo && url.includes("/dp/")) {
        console.log("üîπ √úr√ºn sayfasƒ± algƒ±landƒ±.");
        const quantity = params.get("quantity") || "1";

        // √ñnce kupon/indirim kontrol√º yapƒ±lacak
        setTimeout(() => {
            console.log("üîç Kupon ve indirim kontrol√º yapƒ±lƒ±yor...");

            // Kupon ve marka indirimi kontrol√º
            const promoBlock = document.querySelector("#promoPriceBlockMessage_feature_div");
            if (promoBlock) {
                console.log("‚úÖ Kupon/indirim alanƒ± bulundu.");

                // Kupon checkbox kontrol√º
                const couponCheckboxes = promoBlock.querySelectorAll(".a-icon-checkbox");
                if (couponCheckboxes.length > 0) {
                    console.log(`üé´ ${couponCheckboxes.length} adet kupon checkbox'ƒ± bulundu.`);
                    couponCheckboxes.forEach((checkbox, index) => {
                        setTimeout(() => {
                            console.log(`Kupon #${index+1} se√ßiliyor...`);
                            checkbox.click();
                        }, 300 + (index * 100)); // Her kupon i√ßin biraz bekle
                    });
                }

                // Redeem butonlarƒ± kontrol√º
                const redeemButtons = promoBlock.querySelectorAll("input.a-button-input[type='submit']");
                if (redeemButtons.length > 0) {
                    console.log(`üí∞ ${redeemButtons.length} adet redeem butonu bulundu.`);
                    redeemButtons.forEach((button, index) => {
                        setTimeout(() => {
                            console.log(`Redeem butonu #${index+1} tƒ±klanƒ±yor...`);
                            button.click();
                        }, 300 + (index * 100)); // Kuponlardan sonra √ßalƒ±≈üacak
                    });
                }

                if (couponCheckboxes.length === 0 && redeemButtons.length === 0) {
                    console.log("‚ÑπÔ∏è Tƒ±klanabilir kupon veya indirim bulunamadƒ±.");
                }
            } else {
                console.log("‚ÑπÔ∏è Bu √ºr√ºnde kupon/indirim alanƒ± bulunmuyor.");
            }

            // Miktar ayarlama ve sepete ekleme
            setTimeout(() => {
                let quantitySelect = document.getElementById("quantity");
                if (quantitySelect) {
                    if (quantitySelect.querySelector(`option[value="${quantity}"]`)) {
                        quantitySelect.value = quantity;
                        quantitySelect.dispatchEvent(new Event('change', { bubbles: true }));
                        console.log("‚úÖ √úr√ºn adedi ayarlandƒ±:", quantity);
                    }

                    setTimeout(() => {
                        const addToCartBtn = document.getElementById("add-to-cart-button");
                        if (addToCartBtn) {
                            console.log("üõí Add to Cart tƒ±klanƒ±yor...");
                            addToCartBtn.click();
                        }
                    }, 300);
                }
            }, 300); // Kupon i≈ülemleri i√ßin yeterli s√ºre bekle
        }, 300); // Sayfa y√ºklenmesi i√ßin biraz bekle

        return;
    }

    // B. Smart Wagon Sayfasƒ± (/cart/smart-wagon/)
    if (url.includes("cart/smart-wagon")) {
        console.log("üîπ Smart-wagon sayfasƒ± algƒ±landƒ±.");
        const alreadyReloaded = sessionStorage.getItem("smartWagonReloaded");
        if (!alreadyReloaded) {
            console.log("üîÅ ƒ∞lk kez girildi, sayfa ≈üimdi yenilenecek.");
            sessionStorage.setItem("smartWagonReloaded", "true");
            location.reload();
            return;
        }
        console.log("‚úÖ Yenilenmi≈ü sayfadayƒ±z, Go to Cart tƒ±klanacak.");
        sessionStorage.removeItem("smartWagonReloaded");
        let tryGoToCart = setInterval(() => {
            const goToCartLink = document.querySelector("a[href='/cart?ref_=sw_gtc']");
            if (goToCartLink) {
                clearInterval(tryGoToCart);
                console.log("‚û°Ô∏è Go to Cart bulundu, tƒ±klanƒ±yor.");
                goToCartLink.click();
            }
        }, 300);
        return;
    }

    // C. Sepet Sayfasƒ± (/cart/) ‚Äì SEPET KONTROL√ú, TEMƒ∞ZLEME VE √úR√úN EKLEME
    if (isSipo && url.includes("/cart") && !url.includes("smart-wagon")) {
        console.log("üîπ Sepet sayfasƒ± algƒ±landƒ±.");

        const deleteBtns = document.querySelectorAll('button[data-action="a-stepper-decrement"]');
        if (deleteBtns.length > 0) {
            console.log("üóë Sepette √ºr√ºn(ler) bulundu. Temizleniyor...");
            deleteBtns.forEach(btn => {
                const productName = btn.getAttribute('aria-label');
                console.log("Siliniyor:", productName);
                btn.click();
            });
            setTimeout(() => {
                console.log("‚úÖ Sepet temizlendi, √ºr√ºn ekleniyor...");
                const asin = params.get("asin");
                const quantity = params.get("quantity") || "1";
                if (asin) {
                    window.location.href = `https://www.amazon.com/dp/${asin}?th=1&linkCode=sl1&tag=newgrl0b-20&linkId=1f6d87753d9002b73e8d461aa9ffda14&language=en_US&ref_=as_li_ss_tl&sipo=true&newTab=true&quantity=${quantity}`;
                } else {
                    console.log("ASIN parametresi bulunamadƒ±, √ºr√ºn eklenemiyor.");
                }
            }, 2000);
            return;
        }

        const desiredQuantity = params.get("quantity") || "1";
        let tryCartUpdate = setInterval(() => {
            const quantityInput = document.querySelector('input[name="quantityBox"]');
            if (quantityInput) {
                clearInterval(tryCartUpdate);
                if (quantityInput.value !== desiredQuantity) {
                    console.log("üîß Sepetteki adet g√ºncelleniyor. Yeni deƒüer:", desiredQuantity);
                    quantityInput.value = desiredQuantity;
                    quantityInput.dispatchEvent(new Event('change', { bubbles: true }));
                    const updateBtn = document.querySelector('.sc-quantity-update-button a');
                    if (updateBtn) {
                        updateBtn.click();
                        console.log("üõ† Update butonuna tƒ±klandƒ±.");
                    }
                }
                let tryProceed = setInterval(() => {
                    const proceedBtn = document.querySelector('input[name="proceedToRetailCheckout"]');
                    if (proceedBtn) {
                        clearInterval(tryProceed);
                        console.log("‚û°Ô∏è Proceed to Checkout butonuna tƒ±klanƒ±yor.");
                        proceedBtn.click();
                    }
                }, 300);
            }
        }, 300);
        return;
    }

    // YENƒ∞ EK: Cart sayfasƒ± (ref_=sw_gtc) a√ßƒ±ldƒ±ƒüƒ±nda Proceed to checkout butonuna tƒ±klama
    if (url.includes("/cart?ref_=sw_gtc")) {
        console.log("üîπ Cart ref sw_gtc sayfasƒ± algƒ±landƒ±.");
        let tryProceedSpecific = setInterval(() => {
            const proceedBtn = document.querySelector('input[name="proceedToRetailCheckout"]');
            if (proceedBtn) {
                clearInterval(tryProceedSpecific);
                console.log("‚û°Ô∏è Cart ref sw_gtc Proceed to Checkout butonuna tƒ±klanƒ±yor.");
                proceedBtn.click();
            }
        }, 300);
        return;
    }

    // D. Chewbacca ‚Üí Cheetah Y√∂nlendirmesi
    if (isSipo && url.includes("/checkout/p/") && url.includes("pipelineType=Chewbacca")) {
        console.log("üöö Chewbacca sayfasƒ± algƒ±landƒ± ‚Üí Cheetah y√∂nlendirmesi yapƒ±lƒ±yor...");
        setTimeout(() => {
            window.location.href = "https://www.amazon.com/gp/buy/addressselect/handlers/display.html?_from=cheetah&sipo=true&newTab=true";
        }, 100);
        return;
    }

    // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    // 3. SELLERFLASH SAYFASI: Affiliate Satƒ±n Al Butonu
    // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    if (url.includes("panel.sellerflash.com/sellerOrder/")) {
        console.log("üîπ Sellerflash sipari≈ü sayfasƒ± algƒ±landƒ±:", window.location.href);

        // Mevcut affiliate satƒ±n al butonu ekleme i≈ülemi
        const observer = new MutationObserver(() => {
            if (document.getElementById('custom-buy-button')) return;

            const card = document.querySelector('.card.p-mb-3');
            if (card) {
                const btn = document.createElement('button');
                btn.id = 'custom-buy-button';
                btn.textContent = "Affiliate Satƒ±n Al";
                btn.style = "width: 100%; font-size: 15px; margin-top: 10px; background-color: #ff9900; color: white; border: none; padding: 10px; cursor: pointer;";

                // Buton element fonksiyonu
                btn.addEventListener('click', () => {
                    const asinLink = document.querySelector('a[href*="amazon.com/dp/"]');
                    const asin = asinLink ? asinLink.textContent.trim() : null;
                    const quantityBadge = document.querySelector('span.p-badge-info');
                    const quantity = quantityBadge ? parseInt(quantityBadge.textContent.trim()) : 1;

                    if (!asin) {
                        alert("ASIN bulunamadƒ±.");
                        return;
                    }

                    // YENƒ∞: Yeni sekmede affiliate linki a√ß
                    const affiliateURL = `https://www.amazon.com/dp/${asin}?th=1&linkCode=sl1&tag=newgrl0b-20&linkId=1f6d87753d9002b73e8d461aa9ffda14&language=en_US&ref_=as_li_ss_tl&sipo=true&newTab=true&quantity=${quantity}`;
                    console.log("üîó Yeni sekmede a√ßƒ±lacak URL:", affiliateURL);
                    window.open(affiliateURL, '_blank');
                });

                card.parentNode.insertBefore(btn, card.nextSibling);
                console.log("‚úÖ Affiliate Satƒ±n Al butonu eklendi");
            }
        });
        observer.observe(document.body, { childList: true, subtree: true });
    }
})();
